// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: text.sql

package gen

import (
	"context"
	"time"
)

const createText = `-- name: CreateText :exec
INSERT INTO text (id, note_id, content, created_at, updated_at) VALUES
(?1, ?2, ?3, ?4, ?5)
`

type CreateTextParams struct {
	ID        string
	NoteID    string
	Content   string
	CreatedAt time.Time
	UpdatedAt time.Time
}

func (q *Queries) CreateText(ctx context.Context, arg CreateTextParams) error {
	_, err := q.db.ExecContext(ctx, createText,
		arg.ID,
		arg.NoteID,
		arg.Content,
		arg.CreatedAt,
		arg.UpdatedAt,
	)
	return err
}

const getTextByID = `-- name: GetTextByID :one
SELECT id, note_id, content, created_at, updated_at 
FROM text 
WHERE id = ?1 LIMIT 1
`

func (q *Queries) GetTextByID(ctx context.Context, id string) (Text, error) {
	row := q.db.QueryRowContext(ctx, getTextByID, id)
	var i Text
	err := row.Scan(
		&i.ID,
		&i.NoteID,
		&i.Content,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
