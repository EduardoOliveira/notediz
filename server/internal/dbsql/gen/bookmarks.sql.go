// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: bookmarks.sql

package gen

import (
	"context"
	"time"
)

const createBookmark = `-- name: CreateBookmark :exec
INSERT INTO bookmark (id, note_id, url, title, description, created_at, updated_at) VALUES
(?1, ?2, ?3, ?4, ?5, ?6, ?7)
`

type CreateBookmarkParams struct {
	ID          string
	NoteID      string
	Url         string
	Title       string
	Description string
	CreatedAt   time.Time
	UpdatedAt   time.Time
}

func (q *Queries) CreateBookmark(ctx context.Context, arg CreateBookmarkParams) error {
	_, err := q.db.ExecContext(ctx, createBookmark,
		arg.ID,
		arg.NoteID,
		arg.Url,
		arg.Title,
		arg.Description,
		arg.CreatedAt,
		arg.UpdatedAt,
	)
	return err
}

const getBookmarkByID = `-- name: GetBookmarkByID :one
SELECT id, note_id, url, title, description, created_at, updated_at
FROM bookmark
WHERE id = ?1
`

func (q *Queries) GetBookmarkByID(ctx context.Context, id string) (Bookmark, error) {
	row := q.db.QueryRowContext(ctx, getBookmarkByID, id)
	var i Bookmark
	err := row.Scan(
		&i.ID,
		&i.NoteID,
		&i.Url,
		&i.Title,
		&i.Description,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
